spring:
  datasource:
    url: ${MYSQL_CONNECT}
    username: ${USERNAME}
    password: ${PASSWORD}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_ID}
            clientSecret: ${GOOGLE_SECRET_CODE}
#            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - profile
          facebook:
            clientId: ${FACEBOOK_ID}
            clientSecret: ${FACEBOOK_SECRET_CODE}
#            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - email
              - public_profile
          github:
            clientId: ${GITHUB_ID}
            clientSecret: ${GITHUB_SECRET_CODE}
#            redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
            scope:
              - user:email
              - read:user
server:
  port: ${PORT}
redis:
  host: ${REDIS_HOST}
  port: ${REDIS_PORT}
jwt:
  secret-key: ${JWT_SECRET_KEY}
  token-expire-time: ${JWT_TOKEN_EXPIRE_TIME}
  refresh-expire-time: ${JWT_REFRESH_TOKEN_EXPIRE_TIME}
  otp-expire-time: ${JWT_OTP_EXPIRE_TIME}
auth:
  authorizedRedirectUris: ${OAUTH_REDIRECT_URI}

amazonS3:
  endpointUrl: ${S3_ENPOINT}
  accessKey: ${S3_ACCESS_KEY}
  secretKey: ${S3_SECRET_KEY}
  bucketName: ${S3_BUCKET_NAME}
  region: ${S3_REGION}

logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql:
              BasicBinder: TRACE